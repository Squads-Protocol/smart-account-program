/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as web3 from '@solana/web3.js'
import * as beetSolana from '@metaplex-foundation/beet-solana'
import * as beet from '@metaplex-foundation/beet'
import {
  SmartAccountSigner,
  smartAccountSignerBeet,
} from './SmartAccountSigner'
/**
 * This type is used to derive the {@link LimitedSettingsAction} type as well as the de/serializer.
 * However don't refer to it in your code but use the {@link LimitedSettingsAction} type instead.
 *
 * @category userTypes
 * @category enums
 * @category generated
 * @private
 */
export type LimitedSettingsActionRecord = {
  AddSigner: { newSigner: SmartAccountSigner }
  RemoveSigner: { oldSigner: web3.PublicKey }
  ChangeThreshold: { newThreshold: number }
  SetTimeLock: { newTimeLock: number }
}

/**
 * Union type respresenting the LimitedSettingsAction data enum defined in Rust.
 *
 * NOTE: that it includes a `__kind` property which allows to narrow types in
 * switch/if statements.
 * Additionally `isLimitedSettingsAction*` type guards are exposed below to narrow to a specific variant.
 *
 * @category userTypes
 * @category enums
 * @category generated
 */
export type LimitedSettingsAction =
  beet.DataEnumKeyAsKind<LimitedSettingsActionRecord>

export const isLimitedSettingsActionAddSigner = (
  x: LimitedSettingsAction
): x is LimitedSettingsAction & { __kind: 'AddSigner' } =>
  x.__kind === 'AddSigner'
export const isLimitedSettingsActionRemoveSigner = (
  x: LimitedSettingsAction
): x is LimitedSettingsAction & { __kind: 'RemoveSigner' } =>
  x.__kind === 'RemoveSigner'
export const isLimitedSettingsActionChangeThreshold = (
  x: LimitedSettingsAction
): x is LimitedSettingsAction & { __kind: 'ChangeThreshold' } =>
  x.__kind === 'ChangeThreshold'
export const isLimitedSettingsActionSetTimeLock = (
  x: LimitedSettingsAction
): x is LimitedSettingsAction & { __kind: 'SetTimeLock' } =>
  x.__kind === 'SetTimeLock'

/**
 * @category userTypes
 * @category generated
 */
export const limitedSettingsActionBeet =
  beet.dataEnum<LimitedSettingsActionRecord>([
    [
      'AddSigner',
      new beet.BeetArgsStruct<LimitedSettingsActionRecord['AddSigner']>(
        [['newSigner', smartAccountSignerBeet]],
        'LimitedSettingsActionRecord["AddSigner"]'
      ),
    ],

    [
      'RemoveSigner',
      new beet.BeetArgsStruct<LimitedSettingsActionRecord['RemoveSigner']>(
        [['oldSigner', beetSolana.publicKey]],
        'LimitedSettingsActionRecord["RemoveSigner"]'
      ),
    ],

    [
      'ChangeThreshold',
      new beet.BeetArgsStruct<LimitedSettingsActionRecord['ChangeThreshold']>(
        [['newThreshold', beet.u16]],
        'LimitedSettingsActionRecord["ChangeThreshold"]'
      ),
    ],

    [
      'SetTimeLock',
      new beet.BeetArgsStruct<LimitedSettingsActionRecord['SetTimeLock']>(
        [['newTimeLock', beet.u32]],
        'LimitedSettingsActionRecord["SetTimeLock"]'
      ),
    ],
  ]) as beet.FixableBeet<LimitedSettingsAction, LimitedSettingsAction>
